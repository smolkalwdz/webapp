import React, { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { useTelegram } from '../hooks/useTelegram'
import { userService, bookingService, User, Booking } from '../services/axleCrm'
import { ArrowLeft, User as UserIcon, Phone, Mail, Calendar, Clock } from 'lucide-react'
import toast from 'react-hot-toast'

const Profile: React.FC = () => {
  const navigate = useNavigate()
  const { user: tgUser } = useTelegram()
  const [user, setUser] = useState<User | null>(null)
  const [bookings, setBookings] = useState<Booking[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    loadUserData()
  }, [tgUser])

  const loadUserData = async () => {
    console.log('üîç –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    console.log('üì± Telegram User:', tgUser)
    console.log('üÜî Telegram ID:', tgUser?.id)
    
    if (!tgUser?.id) {
      console.log('‚ùå Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω')
      setLoading(false)
      return
    }

    try {
      console.log('üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegram_id:', tgUser.id)
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Axle CRM
      await new Promise(resolve => setTimeout(resolve, 1000))
      
      const [userData, userBookings] = await Promise.all([
        userService.getByTelegramId(tgUser.id),
        bookingService.getUserBookings(tgUser.id)
      ])
      
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userData)
      console.log('üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', userBookings)
      
      if (userData) {
      setUser(userData)
      setBookings(userBookings)
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω')
      } else {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ')
        toast.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.')
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è')
    } finally {
      setLoading(false)
    }
  }

  const handleBack = () => {
    navigate('/')
  }

  const handleEditProfile = () => {
    // –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    toast('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
  }

  if (loading) {
    return (
      <div className="container">
        <div className="nav">
          <button className="nav-back" onClick={handleBack}>
            <ArrowLeft className="icon" />
            –ù–∞–∑–∞–¥
          </button>
          <h1 className="nav-title">–ü—Ä–æ—Ñ–∏–ª—å</h1>
          <div></div>
        </div>
        <div className="card">
          <div className="loading">
            <h2>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</h2>
          </div>
        </div>
      </div>
    )
  }

  if (!user) {
    return (
      <div className="container">
        <div className="nav">
          <button className="nav-back" onClick={handleBack}>
            <ArrowLeft className="icon" />
            –ù–∞–∑–∞–¥
          </button>
          <h1 className="nav-title">–ü—Ä–æ—Ñ–∏–ª—å</h1>
          <div></div>
        </div>
        <div className="card">
          <div className="notification error">
            <strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</strong>
            <p style={{ marginTop: '8px' }}>
              –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ
            </p>
          </div>
          <button className="btn-primary" onClick={() => navigate('/registration')}>
            –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className="container">
      <div className="nav">
        <button className="nav-back" onClick={handleBack}>
          <ArrowLeft className="icon" />
          –ù–∞–∑–∞–¥
        </button>
        <h1 className="nav-title">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
        <div></div>
      </div>

      <div className="card fade-in">
        <h2 className="section-title">–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
        
        <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '20px' }}>
          <div style={{
            width: '60px',
            height: '60px',
            borderRadius: '50%',
            background: 'var(--tg-theme-button-color, #2481cc)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            color: 'white',
            fontSize: '24px',
            fontWeight: '600'
          }}>
            {(user.first_name || '–ü').charAt(0).toUpperCase()}
          </div>
          <div>
            <h3 style={{ margin: '0 0 4px 0', fontSize: '20px', fontWeight: '600' }}>
              {user.first_name} {user.last_name || ''}
            </h3>
            <p style={{ margin: 0, color: 'var(--tg-theme-hint-color, #999999)' }}>
              ID: {user.telegram_id}
            </p>
          </div>
        </div>

        <div className="card" style={{ marginBottom: '16px' }}>
          <h3 className="section-title">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
          
          <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '12px' }}>
            <UserIcon className="icon" style={{ width: '16px', height: '16px' }} />
            <span><strong>–ò–º—è:</strong> {user.first_name}</span>
          </div>
          
          {user.last_name && (
            <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '12px' }}>
              <UserIcon className="icon" style={{ width: '16px', height: '16px' }} />
              <span><strong>–§–∞–º–∏–ª–∏—è:</strong> {user.last_name}</span>
            </div>
          )}
          
          {user.phone && (
            <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '12px' }}>
              <Phone className="icon" style={{ width: '16px', height: '16px' }} />
              <span><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {user.phone}</span>
            </div>
          )}
          
          {user.email && (
            <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '12px' }}>
              <Mail className="icon" style={{ width: '16px', height: '16px' }} />
              <span><strong>Email:</strong> {user.email}</span>
            </div>
          )}
          
          {/* Username field removed as it's not in User interface */}
        </div>

        <div className="card" style={{ marginBottom: '16px' }}>
          <h3 className="section-title">–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
          
          {bookings.length === 0 ? (
            <p style={{ color: 'var(--tg-theme-hint-color, #999999)' }}>
              –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
            </p>
          ) : (
            <div>
              {bookings.slice(0, 3).map((booking) => (
                <div key={booking.id} className="list-item" style={{ padding: '12px 0' }}>
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <Calendar className="icon" style={{ width: '16px', height: '16px' }} />
                    <span>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ #{booking.id}</span>
                  </div>
                  <div className={`status-badge status-${booking.status}`}>
                    {booking.status === 'pending' && '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'}
                    {booking.status === 'confirmed' && '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ'}
                    {booking.status === 'cancelled' && '–û—Ç–º–µ–Ω–µ–Ω–æ'}
                  </div>
                </div>
              ))}
              
              {bookings.length > 3 && (
                <button 
                  className="btn-secondary" 
                  onClick={() => navigate('/booking')}
                  style={{ marginTop: '12px' }}
                >
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ ({bookings.length})
                </button>
              )}
            </div>
          )}
        </div>

        <div className="card">
          <h3 className="section-title">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
          
          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '16px' }}>
            <div style={{ textAlign: 'center' }}>
              <div style={{ fontSize: '24px', fontWeight: '600', color: 'var(--tg-theme-button-color, #2481cc)' }}>
                {bookings.length}
              </div>
              <div style={{ fontSize: '12px', color: 'var(--tg-theme-hint-color, #999999)' }}>
                –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
              </div>
            </div>
            
            <div style={{ textAlign: 'center' }}>
              <div style={{ fontSize: '24px', fontWeight: '600', color: '#4CAF50' }}>
                {bookings.filter(b => b.status === 'confirmed').length}
              </div>
              <div style={{ fontSize: '12px', color: 'var(--tg-theme-hint-color, #999999)' }}>
                –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ
              </div>
            </div>
            
            <div style={{ textAlign: 'center' }}>
              <div style={{ fontSize: '24px', fontWeight: '600', color: '#FF9800' }}>
                {bookings.filter(b => b.status === 'pending').length}
              </div>
              <div style={{ fontSize: '12px', color: 'var(--tg-theme-hint-color, #999999)' }}>
                –û–∂–∏–¥–∞–µ—Ç
              </div>
            </div>
          </div>
        </div>

        <div className="divider" />

        <button className="btn-secondary" onClick={handleEditProfile}>
          –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        </button>
      </div>
    </div>
  )
}

export default Profile 